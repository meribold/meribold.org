body {
  /* Horizontally center everything. */
  margin: auto;
  /* Make sure the text can't start and stop exactly at the screen edges; leave some
   * space.
   */
  padding: 0 7.5px;
  /* Set the maximum width in terms of the width of '0' in whatever font is used.  See
   * <https://developer.mozilla.org/en/docs/Web/CSS/length> and
   * <https://practicaltypography.com/line-length.html>.
   */
  max-width: 75ch;
  line-height: 1.5;
  /* Use the browser's default sans-serif font.  Don't impose anything more than that.
   * Someone could even set their default sans-serif font to a font with serifs.  When I
   * don't set `font-family` some browsers use a serif font by default, though.
   */
  font-family: sans-serif;
  /* See <https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering>. */
  text-rendering: optimizeLegibility;
  /* overflow-y: scroll; */
  overflow-x: hidden;
  text-size-adjust: none;
  -webkit-text-size-adjust: none;
}

body.dark {
  background-color: #181818;
  color: #fff;
}

body.dark .site-header {
  border-bottom: 1px solid #333;
}

body.dark .site-footer {
  border-top: 1px solid #333;
}

#theme-toggle {
  cursor: pointer;
  user-select: none;
  display: none;
}

#theme-toggle.override {
  color: #000;
}

body.dark #theme-toggle.override {
  color: #fff;
}

main a {
  color: #000080;
}

body.dark main a {
  color: #e6db74;
}

/* Fully justify text.  Also see <https://practicaltypography.com/hyphenation.html>. */
@media screen and (min-width: 65ch) {
  p {
    text-align: justify;
    /* See <https://caniuse.com/css-hyphens>. */
    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
  }
}

sup {
  line-height: 0;
}

/* Make sure full justification is disabled for these elements. */
blockquote, blockquote > p, ul, ul p, ol, ol p, dl, dl p, h1, h2, h3, h4, h5, h6 {
  text-align: initial;
  hyphens: initial;
}

/* Headings.  Only <h1>, <h2>, and <h3> should be used [1].  Their styles are those most
 * browsers use for <h2>, <h3>, and <h4>, respectively [2].  Since I only want to use
 * three levels of headings, <h4>, <h5>, and <h6> aren't visually distinct from <h3>.
 *
 * There's some weirdness going on with <h1> font sizes in most browsers (e.g. Firefox and
 * Chrome): <h1> headings become gradually smaller the deeper they are nested in
 * <article>, <aside>, <nav>, and <section> (see [3] in Firefox and [4]).  I think it's
 * rooted in the HTML5 specification.  See [5].
 *
 * [1]: https://practicaltypography.com/headings.html
 * [2]: https://www.w3schools.com/tags/tag_hn.asp
 * [3]: view-source:resource://gre-resources/html.css
 * [4]: https://stackoverflow.com/q/22898559 "Why is H2 larger than H1?"
 * [5]: https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_HTML_sections_and_outlines#The_HTML5_outline_algorithm
 */
h1 {
  font-size: 1.5em;
  line-height: 1.25;
  margin-top: 0.6em;
  margin-bottom: 0.15em;
}

h2 {
  font-size: 1.17em;
  line-height: 1.375;
  margin-top: 0.45em;
  margin-bottom: 0.45em;
}

h3, h4, h5, h6 {
  font-size: 1.00em;
  margin-top: 0.45em;
  margin-bottom: 0.45em;
}

h1, h2 {
  font-variant: small-caps;
  /* See <https://practicaltypography.com/letterspacing.html>. */
  letter-spacing: 0.05em;
}

a {
  /* Only underline links on mouseover. */
  text-decoration: none;
  word-wrap: break-word;
}

a:hover {
   text-decoration: underline;
}

/* Set the size of monospace text relative to the normal font size.  See [1], [2], and
 * [3].  Make it smaller, but not as excessively as typical browser defaults [4].  Just
 * using the same size as for proportional fonts unfortunately looks pretty bad with the
 * default fonts of most browsers I looked at.
 *
 * [1]: http://code.stephenmorley.org/html-and-css/fixing-browsers-broken-monospace-font-handling/
 * [2]: https://stackoverflow.com/q/38781089
 *      "font-family: monospace, monospace"
 * [3]: https://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/
 * [4]: https://www.brunildo.org/test/monospace_fsize.html
 *      "monospace default font-size"
 */
pre, code, kbd, samp, tt {
  font-family: monospace, monospace;
  font-size: .9375em; /* 15/16 */
  hyphens: none;
}

/* Don't reduce the font size of code blocks twice. */
pre > code {
  font-size: 1em;
}

div.highlighter-rouge {
  border-top: 2px solid #ccc;
  border-bottom: 2px solid #ccc;
  /* Only darken the background color of code blocks very slightly. */
  background-color: #f6f6f6;
  min-width: 100%;
  max-width: calc(50% + 50vw - 7.5px);
  width: -moz-min-content;
  width: -webkit-min-content;
  margin: 1em -7.5px;
  padding: 0 7.5px;
  overflow-x: hidden;
}

body.dark div.highlighter-rouge,
body.dark table {
  border-top: 2px solid #444;
  border-bottom: 2px solid #444;
}

pre {
  padding: .3em 0;
  margin: 0;
  overflow-x: auto;
}

pre > code {
  border: 0;
  padding-right: 0;
  padding-left: 0;
  background-color: #f6f6f6;
}

body.dark div.highlighter-rouge,
body.dark pre > code {
  background-color: #1e1e1e;
}

/* Inline code */
code {
  padding: .1em .2em;
  background-color: #eee;
}

body.dark code {
  background-color: #2e2e2e;
}

/* Images may generally use the whole viewport width and aren't restricted to the line
 * length.  Exceptions in Markdown files can be made using span IALs [2].  There are no
 * margins for images.
 *
 * [1]: https://cloudfour.com/thinks/breaking-out-with-viewport-units-and-calc/
 *      "Breaking Out With Viewport Units and Calc"
 * [2]: https://kramdown.gettalong.org/syntax.html#span-ials
 */
img {
  display: block;
  max-width: 100vw;
  position: relative; /* This makes `left: 50vw` work. */
  left: 50vw;
  transform: translateX(-50%);
  margin-left: calc(-50vw + 50%);
  vertical-align: middle;
}

/* Class for images that disables most weird hacks. */
.normal-img {
  max-width: initial;
  position: initial;
  left: initial;
  transform: initial;
  margin-left: initial;
  vertical-align: initial;
}

/* Wrapper to make the following class work. */
.scrolled-img-wrapper {
  width: 100vw;
  margin-left: calc(-50vw + 50%);
  overflow-x: auto;
}

/* Class for images that shouldn't be scaled but instead have a horizontal scrollbar.
 * They are still centered on wide viewports.  The <img> element should be wrapped in a
 * <div> with the class `scrolled-img-wrapped`. */
.scrolled-img {
  display: block;
  /* Reset some properties set for <img> elements. */
  max-width: initial;
  position: initial;
  left: initial;
  transform: initial;
  vertical-align: initial;
  margin: 0 auto;
}

/* For images that shouldn't be (significantly) wider than the line length.  FIXME: I
 * think small images aren't centered. */
.confined-img {
  display: initial;
  max-width: calc(100% + 15px);
  position: initial;
  left: initial;
  transform: initial;
  margin: 0 -7.5px;
}

/* See <https://css-tricks.com/NetMag/FluidWidthVideo/Article-FluidWidthVideo.php>. */
div.youtube-wrapper {
  position: relative;
  width: calc(100% + 15px);
  margin: 0 -7.5px;
  height: 0;
  padding-bottom: calc(56.25% + 8.4375px); /* (9/16 + 9/16 * 15px) */
}

iframe.youtube-vid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0; /* See <https://stackoverflow.com/q/26274082>. */
}

.post-list-meta {
  display: table-cell;
  padding-right: .33ch;
  white-space: nowrap;
}

.post-list-link {
  display: table-cell;
  padding-left: .33ch;
}

main a.stealth-link, .post-list-link > a {
  color: #000;
}

body.dark main a.stealth-link, body.dark .post-list-link > a {
  color: #fff;
}

article header time.post-meta::before {
  content: " Â· ";
}

.post-list-meta,
.post-meta,
.header-link,
.footer-list li > a,
.footer-link {
  color: #888;
}

body.dark .post-list-meta,
body.dark .post-meta,
body.dark .header-link,
body.dark .footer-list li > a,
.footer-link {
  color: #bbb;
}

/* Block quotations.  Originally based on the Minima theme [1].  Heavily modified by
 * observing how they are usually typeset in TeX documents:
 *
 * 1. Don't screw with the font color.
 * 2. Probably don't screw with the tracking (letter-spacing).  Especially not using
 *    pixels as the unit.  How is the supposed to be portable?
 * 3. Don't make all of it italic.  That's too much emphasis.
 * 4. Definitely don't combine all of the above.
 *
 * [1]: https://github.com/jekyll/minima/blob/affcd93be22e960afd2be08e6891d99b31bcf920/_sass/minima/_base.scss#L117
 */
blockquote {
  border-left: .3em solid #ddd;
  margin-left: 0;
  margin-right: 0;
  padding-left: 2ch;
  padding-right: 2ch;
}

body.dark blockquote {
  border-left: .3em solid #444;
}

blockquote:last-child {
  margin-bottom: 0;
}

/* Tables
 *
 * Inspired by booktabs [1] and the Minima theme [2].  FIXME: the text alignment looks
 * stupid when the table only has two columns.
 *
 * [1]: https://ctan.org/pkg/booktabs
 * [2]: https://github.com/jekyll/minima/blob/affcd93be22e960afd2be08e6891d99b31bcf920/_sass/minima/_base.scss#L220
 */
table {
  text-align: center;
  border-collapse: collapse;
  border-top: 2px solid #ccc;
  border-bottom: 2px solid #ccc;
  /* Horizontally center tables but don't stretch them to the width of the main text and
   * add a horizontal scrollbar if the table is too wide.  See [1] and [2].
   *
   * [1]: https://stackoverflow.com/a/30423904
   *      "Add horizontal scrollbar to html table"
   * [2]: https://stackoverflow.com/a/34071945
   *      "Is it possible to center an inline-block element and if so, how?"
   *
   * Additionally, allow tables to be wider than the main text.  See [3], [4], and
   * especially [5].  FIXME: this breaks when there is a non-overlay vertical scrollbar
   * (one that reduces the width of the viewport): the `vw` (viewport width) unit ignores
   * any reduction of the available space by scrollbars.  A workaround (which I'm
   * currently not using) is `body { overflow-y: scroll; }` [3].  It makes the `vw` unit
   * behave sensibly at the cost of always displaying a scrollbar (and it apparently
   * doesn't work in Chrome and Safari [3]).
   *
   * [3]: https://cloudfour.com/thinks/breaking-out-with-viewport-units-and-calc/
   *      "Breaking Out With Viewport Units and Calc"
   * [4]: https://stackoverflow.com/a/24895631
   *      "Is there a way to make a child DIV wider than the parent DIV using CSS?"
   * [5]: https://stackoverflow.com/a/20214782
   *      "Can you make a child div larger than parent without position absolute?"
   */
  display: inline-block; /* TODO: this adds padding at the bottom of the table. */
  overflow-x: auto;
  /* Eventually add a horizontal scrollbar. */
  max-width: calc(100vw - 7.5px);
  /* This makes `left: 50vw` work. */
  position: relative;
  /* Move the table so it starts at the very left of the viewport.  This is the real magic
   * because it increases how big the automatically calculated width of the table can be
   * to the viewport width.  Taken from [5].  */
  margin-left: calc(-50vw + 50% - 7.5px);
  /* Move the table to the right by half the viewport width.  This will make it start at
   * the center of the viewport when combined with the above line (without it we would use
   * 50%). */
  left: calc(50vw + 7.5px);
  /* Finally move the table to the left by half of its width.  This will center it. */
  transform: translateX(-50%);
}

tbody {
  /* This seems to be the default behavior of Firefox but not Chromium: don't wrap text in
   * table cells. */
  white-space: nowrap;
}

td:first-child, th:first-child {
  text-align: left;
  padding-left: 3.75px;
}

td:last-child, th:last-child {
  text-align: right;
  padding-right: 3.75px;
}

tr:nth-child(even) {
  background-color: #eee;
}

body.dark tr:nth-child(even) {
  background-color: #2e2e2e;
}

th, td {
  padding: .05em 1ch;
}

th {
  font-weight: normal;
  border-bottom: 1px solid #000;
  padding-top: .2em;
  padding-bottom: .2em;
}

body.dark th {
  border-bottom: 1px solid #bbb;
}

/* Add the same abount of vertical padding below the line that seperates the table heading
 * and data as above.  Actually looks pretty bad because the first row of the table is
 * higher than the rest. */
tbody > tr:first-child > td {
  /* padding-top: .2em; */
}

/* All the pages on my website have a footer and I want that footer to be flushed to the
 * page bottom.  This naturally happens when there is at least enough content for
 * scrolling to become necessary to see the footer, but not otherwise.  I inspected
 * <https://jekyll.github.io/minima/misc/2016/05/19/super-short-article.html> to figure
 * out how to flush the footer to the bottom of the page when the page's content has a
 * very small height.  The commit adding this initial solution is db31f09.
 *
 * I had to make some tweaks for Chrome on Android.   (They probably apply to Safari on
 * iOS equally).  My initial solution included setting the minimum height of the <body>
 * element to `100vh` instead of `100%` and didn't do anything to the <html> element.
 * Things got more complicated because of [1].  I hope these tweaks don't break other
 * stuff...
 *
 * [1]: https://developers.google.com/web/updates/2016/12/url-bar-resizing
 */
html {
  /* Using `min-height` here doesn't work. */
  height: 100%;
}
body {
  display: flex;
  flex-direction: column;
  min-height: 100%;
}
main { flex-grow: 1; }

.site-header {
  padding: .2em 0;
  border-bottom: 1px solid #ddd;
  /* Makes sure the line is below all links when the viewport is really narrow and the
   * links get stacked vertically.  See <https://www.w3schools.com/css/css_float.asp>.
   */
  overflow: auto;
}

.site-nav {
  float: right;
}

/* Add gaps between links.  Don't add space after the last child.  */
.header-link:not(:last-child) {
  margin-right: 1ch;
}

.site-footer {
  padding: .2em 0;
  border-top: 1px solid #ddd;
  margin-bottom: .2em;
}

/* See <https://stackoverflow.com/a/32140682>. */
.footer-list {
  list-style: none; /* no bullets */
  padding: 0;
  margin: 0;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  /* Compensate for the margins of list items. */
  width: calc(100% + 1ch);
  position: relative;
  left: -0.5ch;
}

.footer-list li {
  margin: 0 0.5ch;
}

/* Rules for syntax highlighting copied from [1].  Only the color in the first line is
 * modified.  Also see [2].
 *
 * [1]: https://github.com/mojombo/tpw/blob/master/css/syntax.css
 * [2]: https://jekyllrb.com/docs/liquid/tags/#code-snippet-highlighting
 */
.highlight { background: #f6f6f6; }
.highlight .c { color: #999988; font-style: italic }
.highlight .err { color: #a61717; background-color: #e3d2d2 }
.highlight .k { font-weight: bold }
.highlight .o { font-weight: bold }
.highlight .cm { color: #999988; font-style: italic }
.highlight .cp { color: #999999; font-weight: bold }
.highlight .c1 { color: #999988; font-style: italic }
.highlight .cs { color: #999999; font-weight: bold; font-style: italic }
.highlight .gd { color: #000000; background-color: #ffdddd }
.highlight .gd .x { color: #000000; background-color: #ffaaaa }
.highlight .ge { font-style: italic }
.highlight .gr { color: #aa0000 }
.highlight .gh { color: #999999 }
.highlight .gi { color: #000000; background-color: #ddffdd }
.highlight .gi .x { color: #000000; background-color: #aaffaa }
.highlight .go { color: #888888 }
.highlight .gp { color: #555555 }
.highlight .gs { font-weight: bold }
.highlight .gu { color: #aaaaaa }
.highlight .gt { color: #aa0000 }
.highlight .kc { font-weight: bold }
.highlight .kd { font-weight: bold }
.highlight .kp { font-weight: bold }
.highlight .kr { font-weight: bold }
.highlight .kt { color: #445588; font-weight: bold }
.highlight .m { color: #009999 }
.highlight .s { color: #d14 }
.highlight .na { color: #008080 }
.highlight .nb { color: #0086B3 }
.highlight .nc { color: #445588; font-weight: bold }
.highlight .no { color: #008080 }
.highlight .ni { color: #800080 }
.highlight .ne { color: #990000; font-weight: bold }
.highlight .nf { color: #990000; font-weight: bold }
.highlight .nn { color: #555555 }
.highlight .nt { color: #000080 }
.highlight .nv { color: #008080 }
.highlight .ow { font-weight: bold }
.highlight .w { color: #bbbbbb }
.highlight .mf { color: #009999 }
.highlight .mh { color: #009999 }
.highlight .mi { color: #009999 }
.highlight .mo { color: #009999 }
.highlight .sb { color: #d14 }
.highlight .sc { color: #d14 }
.highlight .sd { color: #d14 }
.highlight .s2 { color: #d14 }
.highlight .se { color: #d14 }
.highlight .sh { color: #d14 }
.highlight .si { color: #d14 }
.highlight .sx { color: #d14 }
.highlight .sr { color: #009926 }
.highlight .s1 { color: #d14 }
.highlight .ss { color: #990073 }
.highlight .bp { color: #999999 }
.highlight .vc { color: #008080 }
.highlight .vg { color: #008080 }
.highlight .vi { color: #008080 }
.highlight .il { color: #009999 }

/* This is the Monokai scheme from [1].  Only the background color is modified (the first
 * two lines).  I changed it from #272822.
 *
 * [1]: https://jwarby.github.io/jekyll-pygments-themes/languages/python.html
 */
body.dark .highlight pre { background-color: #1e1e1e }
body.dark .highlight .hll { background-color: #1e1e1e }
body.dark .highlight .c { color: #75715e }
body.dark .highlight .err { color: #960050; background-color: #1e0010 }
body.dark .highlight .k { color: #66d9ef }
body.dark .highlight .l { color: #ae81ff }
body.dark .highlight .n { color: #f8f8f2 }
body.dark .highlight .o { color: #f92672 }
body.dark .highlight .p { color: #f8f8f2 }
body.dark .highlight .cm { color: #75715e }
body.dark .highlight .cp { color: #75715e }
body.dark .highlight .c1 { color: #75715e }
body.dark .highlight .cs { color: #75715e }
body.dark .highlight .ge { font-style: italic }
body.dark .highlight .gs { font-weight: bold }
body.dark .highlight .kc { color: #66d9ef }
body.dark .highlight .kd { color: #66d9ef }
body.dark .highlight .kn { color: #f92672 }
body.dark .highlight .kp { color: #66d9ef }
body.dark .highlight .kr { color: #66d9ef }
body.dark .highlight .kt { color: #66d9ef }
body.dark .highlight .ld { color: #e6db74 }
body.dark .highlight .m { color: #ae81ff }
body.dark .highlight .s { color: #e6db74 }
body.dark .highlight .na { color: #a6e22e }
body.dark .highlight .nb { color: #f8f8f2 }
body.dark .highlight .nc { color: #a6e22e }
body.dark .highlight .no { color: #66d9ef }
body.dark .highlight .nd { color: #a6e22e }
body.dark .highlight .ni { color: #f8f8f2 }
body.dark .highlight .ne { color: #a6e22e }
body.dark .highlight .nf { color: #a6e22e }
body.dark .highlight .nl { color: #f8f8f2 }
body.dark .highlight .nn { color: #f8f8f2 }
body.dark .highlight .nx { color: #a6e22e }
body.dark .highlight .py { color: #f8f8f2 }
body.dark .highlight .nt { color: #f92672 }
body.dark .highlight .nv { color: #f8f8f2 }
body.dark .highlight .ow { color: #f92672 }
body.dark .highlight .w { color: #f8f8f2 }
body.dark .highlight .mf { color: #ae81ff }
body.dark .highlight .mh { color: #ae81ff }
body.dark .highlight .mi { color: #ae81ff }
body.dark .highlight .mo { color: #ae81ff }
body.dark .highlight .sb { color: #e6db74 }
body.dark .highlight .sc { color: #e6db74 }
body.dark .highlight .sd { color: #e6db74 }
body.dark .highlight .s2 { color: #e6db74 }
body.dark .highlight .se { color: #ae81ff }
body.dark .highlight .sh { color: #e6db74 }
body.dark .highlight .si { color: #e6db74 }
body.dark .highlight .sx { color: #e6db74 }
body.dark .highlight .sr { color: #e6db74 }
body.dark .highlight .s1 { color: #e6db74 }
body.dark .highlight .ss { color: #e6db74 }
body.dark .highlight .bp { color: #f8f8f2 }
body.dark .highlight .vc { color: #f8f8f2 }
body.dark .highlight .vg { color: #f8f8f2 }
body.dark .highlight .vi { color: #f8f8f2 }
body.dark .highlight .il { color: #ae81ff }
body.dark .highlight .gu { color: #75715e }
body.dark .highlight .gd { color: #f92672 }
body.dark .highlight .gi { color: #a6e22e }
