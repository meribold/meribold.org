body {
  /* Horizontally center everything. */
  margin: auto;
  /* Make sure the text can't start and stop exactly at the screen edges; leave some
   * space.
   */
  padding: 0 2mm;
  /* Set the maximum width in terms of the width of '0' in whatever font is used.  See
   * <https://developer.mozilla.org/en/docs/Web/CSS/length>.
   */
  max-width: 80ch;
  line-height: 1.4;
  /* Use the browser's default sans-serif font.  Don't impose anything more than that.
   * Someone could even set their default sans-serif font to a font with serifs.  When I
   * don't set `font-family` some browsers use a serif font by default, though.
   */
  font-family: sans-serif;
  /* overflow-y: scroll; */
  overflow-x: hidden;
}

article {
  /* Fully justify text. */
  text-align: justify;
}

h1, h2, h3 {
  font-variant: small-caps;
}

a {
  /* Only underline links on mouseover. */
  text-decoration: none;
}

a:hover {
   text-decoration: underline; // changed from text:decoration:none
}

/* Set the size of monospace text relative to the normal font size.  See [1], [2], and
 * [3].  Make it smaller, but not as excessively as typical browser defaults [4].  Just
 * using the same size as for proportional fonts unfortunately looks pretty bad with the
 * default fonts of most browsers I looked at.
 *
 * [1]: http://code.stephenmorley.org/html-and-css/fixing-browsers-broken-monospace-font-handling/
 * [2]: https://stackoverflow.com/q/38781089
 *      "font-family: monospace, monospace"
 * [3]: https://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/
 * [4]: https://www.brunildo.org/test/monospace_fsize.html
 *      "monospace default font-size"
 */
pre, code, kbd, samp, tt {
  font-family: monospace, monospace;
  font-size: .9375em; /* 15/16 */
}

div.highlighter-rouge {
  border-top: 2px solid #ccc;
  border-bottom: 2px solid #ccc;
  /* Only darken the background color of code blocks very slightly. */
  background-color: #f6f6f6;
  min-width: 100%;
  max-width: calc(50% + 50vw - 1ch);
  width: -moz-min-content;
  width: -webkit-min-content;
  margin: 1em -1ch;
  padding: 0 1ch;
  overflow-x: hidden;
}

pre {
  padding: .3em 0;
  margin: 0;
  overflow-x: auto;
}

pre > code {
  border: 0;
  padding-right: 0;
  padding-left: 0;
  background-color: #f6f6f6;
}

/* Inline code */
code {
  padding: .1em .2em;
  background-color: #eee;
}

/* Images */
img {
  display: block;
  margin: 0 auto;
  max-width: 100%;
  vertical-align: middle;
}

.post-list {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
}

.post-meta {
  color: #666;
}

/* Block quotations.  Originally based on the Minima theme [1].  Heavily modified by
 * observing how they are usually typeset in TeX documents:
 *
 * 1. Don't screw with the font color.
 * 2. Probably don't screw with the tracking (letter-spacing).  Especially not using
 *    pixels as the unit.  How is the supposed to be portable?
 * 3. Don't make all of it italic.  That's too much emphasis.
 * 4. Definitely don't combine all of the above.
 *
 * [1]: https://github.com/jekyll/minima/blob/affcd93be22e960afd2be08e6891d99b31bcf920/_sass/minima/_base.scss#L117
 */
blockquote {
  border-left: .3em solid #ddd;
  margin-left: 0;
  margin-right: 0;
  padding-left: 2ch;
  padding-right: 2ch;
}

blockquote:last-child {
  margin-bottom: 0;
}

/* Tables
 *
 * Inspired by booktabs [1] and the Minima theme [2].
 *
 * [1]: https://ctan.org/pkg/booktabs
 * [2]: https://github.com/jekyll/minima/blob/affcd93be22e960afd2be08e6891d99b31bcf920/_sass/minima/_base.scss#L220
 */
table {
  text-align: center;
  border-collapse: collapse;
  border-top: 2px solid #ccc;
  border-bottom: 2px solid #ccc;
  /* Horizontally center tables but don't stretch them to the width of the main text and
   * add a horizontal scrollbar if the table is too wide.  See [1] and [2].
   *
   * [1]: https://stackoverflow.com/a/30423904
   *      "Add horizontal scrollbar to html table"
   * [2]: https://stackoverflow.com/a/34071945
   *      "Is it possible to center an inline-block element and if so, how?"
   *
   * Additionally, allow tables to be wider than the main text.  See [3], [4], and
   * especially [5].  FIXME: this breaks when there is a non-overlay vertical scrollbar
   * (one that reduces the width of the viewport): the `vw` (viewport width) unit ignores
   * any reduction of the available space by scrollbars.  A workaround (which I'm
   * currently not using) is `body { overflow-y: scroll; }` [3].  It makes the `vw` unit
   * behave sensibly at the cost of always displaying a scrollbar (and it apparently
   * doesn't work in Chrome and Safari [3]).
   *
   * [3]: https://cloudfour.com/thinks/breaking-out-with-viewport-units-and-calc/
   *      "Breaking Out With Viewport Units and Calc"
   * [4]: https://stackoverflow.com/a/24895631
   *      "Is there a way to make a child DIV wider than the parent DIV using CSS?"
   * [5]: https://stackoverflow.com/a/20214782
   *      "Can you make a child div larger than parent without position absolute?"
   */
  display: inline-block; /* TODO: this adds padding at the bottom of the table. */
  overflow-x: auto;
  /* Eventually add a horizontal scrollbar. */
  max-width: calc(100vw - 4mm);
  /* This makes `left: 50vw` work. */
  position: relative;
  /* Move the table so it starts at the very left of the viewport.  This is the real magic
   * because it increases how big the automatically calculated width of the table can be
   * to the viewport width.  Taken from [5].  */
  margin-left: calc(-1 * ((100vw - 100%) / 2));
  /* Move the table to the right by half the viewport width.  This will make it start at
   * the center of the viewport when combined with the above line (without it we would use
   * 50%). */
  left: 50vw;
  /* Finally move the table to the left by half of its width.  This will center it. */
  transform: translateX(-50%);
}

tbody {
  /* This seems to be the default behavior of Firefox but not Chromium: don't wrap text in
   * table cells. */
  white-space: nowrap;
}

td:first-child, th:first-child {
  text-align: left;
}

td:last-child, th:last-child {
  text-align: right;
}

tr:nth-child(even) {
  background-color: #eee;
}

th, td {
  padding: .05em 1ch;
}

th {
  font-weight: normal;
  border-bottom: 1px solid #000;
  padding-top: .2em;
  padding-bottom: .2em;
}

/* Add the same abount of vertical padding below the line that seperates the table heading
 * and data as above.  Actually looks pretty bad because the first row of the table is
 * higher than the rest. */
tbody > tr:first-child > td {
  /* padding-top: .2em; */
}

/* vim: set tw=90 sts=-1 sw=2 et: */
